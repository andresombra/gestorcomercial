// <auto-generated />
using System;
using Gestor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestor.Data.Migrations
{
    [DbContext(typeof(GestorContext))]
    [Migration("20200327135522_Atualizacao Categoria")]
    partial class AtualizacaoCategoria
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gestor.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeCategoria = "Livros",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 2,
                            NomeCategoria = "Roupas",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 3,
                            NomeCategoria = "Bebidas",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 4,
                            NomeCategoria = "Eletronicos",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 5,
                            NomeCategoria = "Comidas",
                            UsuarioId = 0
                        });
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("LocalizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<int>("TipoPessoaId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoPessoaId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoSecundario")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<decimal>("QtdeEstoque")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCusto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.TipoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeTipoPessoa")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoPessoa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeTipoPessoa = "Cliente",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 2,
                            NomeTipoPessoa = "Fornecedor",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 3,
                            NomeTipoPessoa = "Vendedor",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 4,
                            NomeTipoPessoa = "Transportadora",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 5,
                            NomeTipoPessoa = "Entregador",
                            UsuarioId = 0
                        });
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeUnidade")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Unidade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeUnidade = "UNID",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 2,
                            NomeUnidade = "CAIXA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 3,
                            NomeUnidade = "PCT",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 4,
                            NomeUnidade = "LT",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 5,
                            NomeUnidade = "BDJ",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 6,
                            NomeUnidade = "KG",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 7,
                            NomeUnidade = "ML",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 8,
                            NomeUnidade = "GRFA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 9,
                            NomeUnidade = "FARDO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 10,
                            NomeUnidade = "DUZIA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 11,
                            NomeUnidade = "MEIA DUZIA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 12,
                            NomeUnidade = "AMPOLA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 13,
                            NomeUnidade = "BALDE",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 14,
                            NomeUnidade = "BARRA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 15,
                            NomeUnidade = "BISNAGA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 16,
                            NomeUnidade = "BLOCO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 17,
                            NomeUnidade = "BOBINA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 18,
                            NomeUnidade = "CAPSULA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 19,
                            NomeUnidade = "CARTELA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 20,
                            NomeUnidade = "FOLHA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 21,
                            NomeUnidade = "FRASCO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 22,
                            NomeUnidade = "CENTO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 23,
                            NomeUnidade = "GALÃO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 24,
                            NomeUnidade = "GARRAFA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 25,
                            NomeUnidade = "GRAMAS",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 26,
                            NomeUnidade = "JOGO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 27,
                            NomeUnidade = "KIT",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 28,
                            NomeUnidade = "LITRO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 29,
                            NomeUnidade = "PACOTE",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 30,
                            NomeUnidade = "PALETE",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 31,
                            NomeUnidade = "PARES",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 32,
                            NomeUnidade = "PEÇA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 33,
                            NomeUnidade = "RESMA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 34,
                            NomeUnidade = "ROLO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 35,
                            NomeUnidade = "SACO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 36,
                            NomeUnidade = "SACOLA",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 37,
                            NomeUnidade = "TAMBOR",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 38,
                            NomeUnidade = "TUBO",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 39,
                            NomeUnidade = "VASILHAME",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 40,
                            NomeUnidade = "VIDRO",
                            UsuarioId = 0
                        });
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            NomeUsuario = "Administrador",
                            Senha = "admin",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 2,
                            Login = "oper",
                            NomeUsuario = "Operador",
                            Senha = "oper",
                            UsuarioId = 0
                        },
                        new
                        {
                            Id = 3,
                            Login = "user",
                            NomeUsuario = "Usuario",
                            Senha = "user",
                            UsuarioId = 0
                        });
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Pessoa", b =>
                {
                    b.HasOne("Gestor.Dominio.Entidades.TipoPessoa", "TipoPessoa")
                        .WithMany("Pessoas")
                        .HasForeignKey("TipoPessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestor.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("Gestor.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestor.Dominio.Entidades.Pessoa", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestor.Dominio.Entidades.Unidade", "Unidade")
                        .WithMany("Produtos")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
